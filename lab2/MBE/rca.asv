library ieee;
use ieee.std_logic_1164.all;
use ieee.numeric_std.all;

entity ripplecarry is 
port(
      A : In     std_logic_vector (63 downto 0);
      B : In     std_logic_vector (63 downto 0);
      S : OUT    std_logic_vector (63 downto 0)
);
END ENTITY ripplecarry;

architecture behavior of ripplecarry is

component halfadder is
Port (  A: 		In std_logic;
        B: 		In std_logic;
        S: 		Out std_logic;
        Cout: 	Out std_logic);
end component;

COMPONENT fulladder is
Port (  A: 		In std_logic;
        B: 		In std_logic;
        Cin: 	In std_logic;
        S: 		Out std_logic;
        Cout: 	Out std_logic);
end component;

--TYPE arr_carry_type is ARRAY(0 to 64) of std_logic;  
SIGNAL SIG_C : std_logic_vector(63 DOWNTO 0); 

begin
--SIG_C(0) <= '0';
H_ADDER: HA PORT MAP(
 A   =>   FP_A(0),
 B   =>   FP_B(0),
 S   =>   FP_Z(0),
 Co  =>   SIG_C(0)
);

FA_CHAIN:
FOR IDX in 1 TO 63 GENERATE	
BEGIN
F_ADDER: FA PORT MAP(A=>FP_A(IDX), B=>FP_B(IDX),Ci=> SIG_C(IDX-1),S=>FP_Z(IDX),Co=>SIG_C(IDX));
END GENERATE;

END behav;
